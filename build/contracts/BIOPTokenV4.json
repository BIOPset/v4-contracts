{
  "contractName": "BIOPTokenV4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "whitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addToWhitelist(address)\":{\"details\":\"enable a address to access the approve function while the whitelist is active\",\"params\":{\"user\":\"the address to approve\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"works like normal erc20 approve except when whitelist is enabled then sender must be whitelisted or revert.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"enables DAO to burn tokens \",\"params\":{\"amount\":\"the amount of tokens to burn\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"disableWhitelist()\":{\"details\":\"end the whitelist. This is a one time call, the whitelist cannot be renabled\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeFromWhitelist(address)\":{\"details\":\"disable a address to access the approve function while the whitelist is active\",\"params\":{\"user\":\"the address to revoke access from\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwner(address)\":{\"details\":\"transfer ownership\",\"params\":{\"newOwner_\":\"the new address to assume ownership responsiblity (the multisig)\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/x/Desktop/eth/BIOPv4/contracts/BIOPTokenV4.sol\":\"BIOPTokenV4\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/x/Desktop/eth/BIOPv4/contracts/BIOPToken.sol\":{\"keccak256\":\"0x0e3556001d78f24bb4b3b068e1483e420ed1bfc51a0b1ef20c38b383fad8b882\",\"urls\":[\"bzz-raw://cf82395a92bbe8c63828f19c997ef89bab4eae11b15fa8ffbbe29db9635d27a9\",\"dweb:/ipfs/QmZLET9Ggnb9YN9yDA4EGmeEWXQqaEQrmJJde1ayV2RwkP\"]},\"/Users/x/Desktop/eth/BIOPv4/contracts/BIOPTokenV4.sol\":{\"keccak256\":\"0x1fc2b5a267cd8fb30507aeb40a13aca38c3ad73648363f7ffba0b24b5a406940\",\"urls\":[\"bzz-raw://fe3d50b159f181e8620e10ead3bb9298c5f9ec3bcaceb7f20b8bdc0e79556525\",\"dweb:/ipfs/QmPu4TyETMXSnLG7fz3H4wAeDzKivyqBPNy5UzNYyqoAyY\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x60806040526005805461ff00191690553480156200001c57600080fd5b506040516200146d3803806200146d833981810160405260408110156200004257600080fd5b81019080805160405193929190846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b9083019060208201858111156200012b57600080fd5b82516401000000008111828201881017156200014657600080fd5b82525081516020918201929091019080838360005b83811015620001755781810151838201526020016200015b565b50505050905090810190601f168015620001a35780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001c3906003906020850190620003ce565b508051620001d9906004906020840190620003ce565b50506005805460ff19166012179055506200020b336c1068870b629722d92b038000006001600160e01b036200024f16565b50506005805461ff001916610100179055336000818152600660205260409020805460ff19166001179055600780546001600160a01b031916909117905562000473565b6001600160a01b038216620002ab576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620002c2600083836001600160e01b036200036716565b620002de816002546200036c60201b62000cc01790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200031191839062000cc06200036c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620003c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041157805160ff191683800117855562000441565b8280016001018555821562000441579182015b828111156200044157825182559160200191906001019062000424565b506200044f92915062000453565b5090565b6200047091905b808211156200044f57600081556001016200045a565b90565b610fea80620004836000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d714610368578063a9059cbb14610394578063d6b0f484146103c0578063dd62ed3e146103c8578063e43252d7146103f657610121565b806370a08231146102ca5780638ab1d681146102f05780638da5cb5b1461031657806395d89b411461033a5780639b19251a1461034257610121565b8063313ce567116100f4578063313ce56714610233578063395093511461025157806342966c681461027d5780634fb2e45d1461029c57806351fb012d146102c257610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806323b872dd146101fd575b600080fd5b61012e61041c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b0381351690602001356104b2565b604080519115158252519081900360200190f35b6101eb610553565b60408051918252519081900360200190f35b6101cf6004803603606081101561021357600080fd5b506001600160a01b03813581169160208101359091169060400135610559565b61023b6105e6565b6040805160ff9092168252519081900360200190f35b6101cf6004803603604081101561026757600080fd5b506001600160a01b0381351690602001356105ef565b61029a6004803603602081101561029357600080fd5b5035610643565b005b61029a600480360360208110156102b257600080fd5b50356001600160a01b03166106a3565b6101cf61071d565b6101eb600480360360208110156102e057600080fd5b50356001600160a01b031661072b565b61029a6004803603602081101561030657600080fd5b50356001600160a01b0316610746565b61031e6107bf565b604080516001600160a01b039092168252519081900360200190f35b61012e6107ce565b6101cf6004803603602081101561035857600080fd5b50356001600160a01b031661082f565b6101cf6004803603604081101561037e57600080fd5b506001600160a01b038135169060200135610844565b6101cf600480360360408110156103aa57600080fd5b506001600160a01b0381351690602001356108b2565b61029a6108c6565b6101eb600480360360408110156103de57600080fd5b506001600160a01b038135811691602001351661092b565b61029a6004803603602081101561040c57600080fd5b50356001600160a01b0316610956565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b5050505050905090565b600554600090610100900460ff161561053857600660006104d16109d2565b6001600160a01b0316815260208101919091526040016000205460ff161515600114610538576040805162461bcd60e51b81526020600482015260116024820152703ab730b8383937bb32b21039b2b73232b960791b604482015290519081900360640190fd5b61054a6105436109d2565b84846109d6565b50600192915050565b60025490565b6000610566848484610ac2565b6105dc846105726109d2565b6105d785604051806060016040528060288152602001610efe602891396001600160a01b038a166000908152600160205260408120906105b06109d2565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610c2916565b6109d6565b5060019392505050565b60055460ff1690565b600061054a6105fc6109d2565b846105d7856001600061060d6109d2565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610cc016565b8061064d3361072b565b1015610696576040805162461bcd60e51b8152602060048201526013602482015272696e737566666963656e742062616c616e636560681b604482015290519081900360640190fd5b6106a03382610d21565b50565b6007546001600160a01b031633146106fb576040805162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600554610100900460ff1681565b6001600160a01b031660009081526020819052604090205490565b6007546001600160a01b0316331461079e576040805162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b6007546001600160a01b031681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a85780601f1061047d576101008083540402835291602001916104a8565b60066020526000908152604090205460ff1681565b600061054a6108516109d2565b846105d785604051806060016040528060258152602001610f90602591396001600061087b6109d2565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610c2916565b600061054a6108bf6109d2565b8484610ac2565b6007546001600160a01b0316331461091e576040805162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015290519081900360640190fd5b6005805461ff0019169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546001600160a01b031633146109ae576040805162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b3390565b6001600160a01b038316610a1b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f6c6024913960400191505060405180910390fd5b6001600160a01b038216610a605760405162461bcd60e51b8152600401808060200182810382526022815260200180610eb66022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b075760405162461bcd60e51b8152600401808060200182810382526025815260200180610f476025913960400191505060405180910390fd5b6001600160a01b038216610b4c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e716023913960400191505060405180910390fd5b610b57838383610e29565b610b9a81604051806060016040528060268152602001610ed8602691396001600160a01b038616600090815260208190526040902054919063ffffffff610c2916565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610bcf908263ffffffff610cc016565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610cb85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c7d578181015183820152602001610c65565b50505050905090810190601f168015610caa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d1a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d665760405162461bcd60e51b8152600401808060200182810382526021815260200180610f266021913960400191505060405180910390fd5b610d7282600083610e29565b610db581604051806060016040528060228152602001610e94602291396001600160a01b038516600090815260208190526040902054919063ffffffff610c2916565b6001600160a01b038316600090815260208190526040902055600254610de1908263ffffffff610e2e16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b6000610d1a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c2956fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204722bf0d1e2b19ccc72039f1593be0f45ccf3f2d3cc4af16aa73af2f88e4a7a364736f6c63430006060033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "160:2674:2:-:0;;;196:36;;;-1:-1:-1;;196:36:2;;;310:681;2:2:-1;;;;27:1;24;17:12;2:2;310:681:2;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;310:681:2;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;310:681:2;;420:4:-1;411:14;;;;310:681:2;;;;;411:14:-1;310:681:2;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;310:681:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;310:681:2;;420:4:-1;411:14;;;;310:681:2;;;;;411:14:-1;310:681:2;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;310:681:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;310:681:2;;-1:-1:-1;;2030:13:16;;379:5:2;;-1:-1:-1;386:7:2;;2030:13:16;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2053:17:16;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:16;:14;;-1:-1:-1;;2080:14:16;2092:2;2080:14;;;-1:-1:-1;403:50:2::1;409:10;421:31;-1:-1:-1::0;;;;;403:5:2::1;:50:::0;:::i:1;:::-;-1:-1:-1::0;;899:16:2::1;:23:::0;;-1:-1:-1;;899:23:2::1;;;::::0;;940:10:::1;899:23:::0;930:21;;;:9:::1;:21;::::0;;;;:28;;-1:-1:-1;;930:28:2::1;918:4;930:28;::::0;;966:5:::1;:18:::0;;-1:-1:-1;;;;;;966:18:2::1;::::0;;::::1;::::0;;160:2674;;7790:370:16;-1:-1:-1;;;;;7873:21:16;;7865:65;;;;;-1:-1:-1;;;7865:65:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;-1:-1:-1;;;;;7941:20:16;:49;:::i;:::-;8016:24;8033:6;8016:12;;:16;;;;;;:24;;;;:::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:16;;:9;:18;;;;;;;;;;;;:30;;8094:6;;8071:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8050:18:16;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;10651:92::-;;;;:::o;882:176:15:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:15:o;160:2674:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:2674:2;;;-1:-1:-1;160:2674:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "160:2674:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;160:2674:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2166:81:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2166:81:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:269:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2561:269:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3209:98:16;;;:::i;:::-;;;;;;;;;;;;;;;;4835:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4835:317:16;;;;;;;;;;;;;;;;;:::i;3068:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5547:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5547:215:16;;;;;;;;:::i;1101:148:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1101:148:2;;:::i;:::-;;1611:99;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1611:99:2;-1:-1:-1;;;;;1611:99:2;;:::i;196:36::-;;;:::i;3365:117:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3365:117:16;-1:-1:-1;;;;;3365:117:16;;:::i;2122:106:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2122:106:2;-1:-1:-1;;;;;2122:106:2;;:::i;283:20::-;;;:::i;:::-;;;;-1:-1:-1;;;;;283:20:2;;;;;;;;;;;;;;2360:85:16;;;:::i;238:39:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;238:39:2;-1:-1:-1;;;;;238:39:2;;:::i;6249:266:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6249:266:16;;;;;;;;:::i;3685:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3685:172:16;;;;;;;;:::i;2337:84:2:-;;;:::i;3915:149:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3915:149:16;;;;;;;;;;:::i;1860:100:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1860:100:2;-1:-1:-1;;;;;1860:100:2;;:::i;2166:81:16:-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;2561:269:2:-;2660:16;;2636:4;;2660:16;;;;;2656:102;;;2696:9;:23;2706:12;:10;:12::i;:::-;-1:-1:-1;;;;;2696:23:2;;;;;;;;;;;;-1:-1:-1;2696:23:2;;;;:31;;:23;:31;2688:61;;;;;-1:-1:-1;;;2688:61:2;;;;;;;;;;;;-1:-1:-1;;;2688:61:2;;;;;;;;;;;;;;;2765:39;2774:12;:10;:12::i;:::-;2788:7;2797:6;2765:8;:39::i;:::-;-1:-1:-1;2819:4:2;2561:269;;;;:::o;3209:98:16:-;3288:12;;3209:98;:::o;4835:317::-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:16;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:16;;;;;;;;;;;;-1:-1:-1;5034:33:16;;;:89;;:37;:89;:::i;:::-;5003:8;:121::i;:::-;-1:-1:-1;5141:4:16;4835:317;;;;;:::o;3068:81::-;3133:9;;;;3068:81;:::o;5547:215::-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:16;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:16;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1101:148:2:-;1179:6;1154:21;1164:10;1154:9;:21::i;:::-;:31;;1146:63;;;;;-1:-1:-1;;;1146:63:2;;;;;;;;;;;;-1:-1:-1;;;1146:63:2;;;;;;;;;;;;;;;1217:25;1223:10;1235:6;1217:5;:25::i;:::-;1101:148;:::o;1611:99::-;1423:5;;-1:-1:-1;;;;;1423:5:2;1409:10;:19;1401:54;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;;;;1686:5:::1;:17:::0;;-1:-1:-1;;;;;;1686:17:2::1;-1:-1:-1::0;;;;;1686:17:2;;;::::1;::::0;;;::::1;::::0;;1611:99::o;196:36::-;;;;;;;;;:::o;3365:117:16:-;-1:-1:-1;;;;;3457:18:16;3431:7;3457:18;;;;;;;;;;;;3365:117::o;2122:106:2:-;1423:5;;-1:-1:-1;;;;;1423:5:2;1409:10;:19;1401:54;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;2198:15:2::1;2216:5;2198:15:::0;;;:9:::1;:15;::::0;;;;:23;;-1:-1:-1;;2198:23:2::1;::::0;;2122:106::o;283:20::-;;;-1:-1:-1;;;;;283:20:2;;:::o;2360:85:16:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;238:39:2;;;;;;;;;;;;;;;:::o;6249:266:16:-;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:16;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:16;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3685:172::-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;2337:84:2:-;1423:5;;-1:-1:-1;;;;;1423:5:2;1409:10;:19;1401:54;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;;;;2390:16:::1;:24:::0;;-1:-1:-1;;2390:24:2::1;::::0;;2337:84::o;3915:149:16:-;-1:-1:-1;;;;;4030:18:16;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;1860:100:2:-;1423:5;;-1:-1:-1;;;;;1423:5:2;1409:10;:19;1401:54;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;-1:-1:-1;;;1401:54:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1931:15:2::1;;::::0;;;:9:::1;:15;::::0;;;;:22;;-1:-1:-1;;1931:22:2::1;1949:4;1931:22;::::0;;1860:100::o;598:104:14:-;685:10;598:104;:::o;9313:340:16:-;-1:-1:-1;;;;;9414:19:16;;9406:68;;;;-1:-1:-1;;;9406:68:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9492:21:16;;9484:68;;;;-1:-1:-1;;;9484:68:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9563:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;6989:530::-;-1:-1:-1;;;;;7094:20:16;;7086:70;;;;-1:-1:-1;;;7086:70:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7174:23:16;;7166:71;;;;-1:-1:-1;;;7166:71:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:16;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7306:17:16;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7407:20:16;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;1754:187:15:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1859:29:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:15;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:15:o;8480:410:16:-;-1:-1:-1;;;;;8563:21:16;;8555:67;;;;-1:-1:-1;;;8555:67:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8633:49;8654:7;8671:1;8675:6;8633:20;:49::i;:::-;8714:68;8737:6;8714:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8714:18:16;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8693:18:16;;:9;:18;;;;;;;;;;:89;8807:12;;:24;;8824:6;8807:24;:16;:24;:::i;:::-;8792:12;:39;8846:37;;;;;;;;8872:1;;-1:-1:-1;;;;;8846:37:16;;;;;;;;;;;;8480:410;;:::o;10651:92::-;;;;:::o;1329:134:15:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "pragma solidity ^0.6.6;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"./BIOPToken.sol\";\ncontract BIOPTokenV4 is ERC20 {\n    bool public whitelistEnabled = false;\n    mapping(address=>bool) public whitelist;\n    address public owner;\n\n    constructor(string memory name_, string memory symbol_) public ERC20(name_, symbol_) {\n      _mint(msg.sender, 1300000300000000000000000000000);\n      /*\n      (✅ means a contract for this has been written)\n      late bonding curve = 250000000000000000000000000000✅\n      utilization rewards =650000000000000000000000000000✅\n      swap =                    ?300000000000000000000000✅\n      ITCO =               250000000000000000000000000000✅\n      DEX rewards =         80000000000000000000000000000 TODO\n      dev fund =            70000000000000000000000000000\n      */\n      whitelistEnabled = true;\n      whitelist[msg.sender] = true;\n      owner = msg.sender;\n    }\n\n     /**\n    * @dev enables DAO to burn tokens \n    * @param amount the amount of tokens to burn\n    */\n    function burn(uint256 amount) public {\n      require(balanceOf(msg.sender) >= amount, \"insufficent balance\");\n      _burn(msg.sender, amount);\n    }\n\n    //Temp whitelist functionality\n\n  /**\n   * @dev Reverts if called by anyone other than the contract owner.\n   */\n    modifier onlyOwner() {\n      require(msg.sender == owner, \"Only callable by owner\");\n      _;\n    }\n\n     /**\n    * @dev transfer ownership\n    * @param newOwner_ the new address to assume ownership responsiblity (the multisig)\n    */\n    function transferOwner(address payable newOwner_) public onlyOwner {\n      owner = newOwner_;\n    }\n\n   /**\n    * @dev enable a address to access the approve function while the whitelist is active\n    * @param user the address to approve\n    */\n    function addToWhitelist(address payable user) public onlyOwner {\n      whitelist[user] = true;\n    }\n\n   /**\n    * @dev disable a address to access the approve function while the whitelist is active\n    * @param user the address to revoke access from\n    */\n    function removeFromWhitelist(address payable user) public onlyOwner {\n      whitelist[user] = false;\n    }\n\n    /**\n    * @dev end the whitelist. This is a one time call, the whitelist cannot be renabled\n    */\n    function disableWhitelist() public onlyOwner {\n      whitelistEnabled = false;\n    }\n\n    /**\n    * @dev works like normal erc20 approve except when whitelist is enabled then sender must be whitelisted or revert.\n    */\n    function approve(address spender, uint256 amount) public override returns (bool) {      \n      if (whitelistEnabled) {\n        require(whitelist[_msgSender()] == true, \"unapproved sender\");\n      }\n      _approve(_msgSender(), spender, amount);\n      return true;\n    }\n\n\n}\n",
  "sourcePath": "/Users/x/Desktop/eth/BIOPv4/contracts/BIOPTokenV4.sol",
  "ast": {
    "absolutePath": "/Users/x/Desktop/eth/BIOPv4/contracts/BIOPTokenV4.sol",
    "exportedSymbols": {
      "BIOPTokenV4": [
        481
      ]
    },
    "id": 482,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 308,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 309,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 6008,
        "src": "25:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 310,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 6511,
        "src": "77:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/x/Desktop/eth/BIOPv4/contracts/BIOPToken.sol",
        "file": "./BIOPToken.sol",
        "id": 311,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 307,
        "src": "134:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 312,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6510,
              "src": "184:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6510",
                "typeString": "contract ERC20"
              }
            },
            "id": 313,
            "nodeType": "InheritanceSpecifier",
            "src": "184:5:2"
          }
        ],
        "contractDependencies": [
          5811,
          6510,
          6588
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 481,
        "linearizedBaseContracts": [
          481,
          6510,
          6588,
          5811
        ],
        "name": "BIOPTokenV4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "51fb012d",
            "id": 316,
            "mutability": "mutable",
            "name": "whitelistEnabled",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 481,
            "src": "196:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 314,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "196:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "227:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b19251a",
            "id": 320,
            "mutability": "mutable",
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 481,
            "src": "238:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 319,
              "keyType": {
                "id": 317,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "238:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 318,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "255:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 322,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 481,
            "src": "283:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 321,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "283:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "395:596:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "409:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31333030303030333030303030303030303030303030303030303030303030",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "421:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1300000300000000000000000000000_by_1",
                          "typeString": "int_const 1300000300000000000000000000000"
                        },
                        "value": "1300000300000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1300000300000000000000000000000_by_1",
                          "typeString": "int_const 1300000300000000000000000000000"
                        }
                      ],
                      "id": 333,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6386,
                      "src": "403:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "403:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "403:50:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "whitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "899:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "918:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "899:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "899:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "930:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "940:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "940:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "930:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "954:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "930:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "930:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 322,
                      "src": "966:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "974:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "974:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "966:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "966:18:2"
                }
              ]
            },
            "documentation": null,
            "id": 356,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 329,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 324,
                    "src": "379:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 330,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 326,
                    "src": "386:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 331,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 328,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6510,
                  "src": "373:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$6510_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "373:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "322:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "343:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "321:44:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:2"
            },
            "scope": 481,
            "src": "310:681:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "1138:111:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 364,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1164:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1164:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 363,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6110,
                            "src": "1154:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1154:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "1179:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1154:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e737566666963656e742062616c616e6365",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1187:21:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41059359df82da7f3c0761b35af2d92f5dfcc348618e6a6acaea0643f23340a3",
                          "typeString": "literal_string \"insufficent balance\""
                        },
                        "value": "insufficent balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41059359df82da7f3c0761b35af2d92f5dfcc348618e6a6acaea0643f23340a3",
                          "typeString": "literal_string \"insufficent balance\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1146:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1146:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1223:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1223:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "1235:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6442,
                      "src": "1217:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:25:2"
                }
              ]
            },
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "998:98:2",
              "text": "@dev enables DAO to burn tokens \n@param amount the amount of tokens to burn"
            },
            "functionSelector": "42966c68",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 379,
                  "src": "1115:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1114:16:2"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:2"
            },
            "scope": 481,
            "src": "1101:148:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "1393:78:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 383,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1409:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1409:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 385,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "1423:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1409:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                          "typeString": "literal_string \"Only callable by owner\""
                        },
                        "value": "Only callable by owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                          "typeString": "literal_string \"Only callable by owner\""
                        }
                      ],
                      "id": 382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1401:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:54:2"
                },
                {
                  "id": 390,
                  "nodeType": "PlaceholderStatement",
                  "src": "1463:1:2"
                }
              ]
            },
            "documentation": {
              "id": 380,
              "nodeType": "StructuredDocumentation",
              "src": "1289:78:2",
              "text": "@dev Reverts if called by anyone other than the contract owner."
            },
            "id": 392,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:2"
            },
            "src": "1372:99:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "1678:32:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 400,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 322,
                      "src": "1686:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 401,
                      "name": "newOwner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "1694:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1686:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:17:2"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "1478:128:2",
              "text": "@dev transfer ownership\n@param newOwner_ the new address to assume ownership responsiblity (the multisig)"
            },
            "functionSelector": "4fb2e45d",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "1668:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1668:9:2"
              }
            ],
            "name": "transferOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "newOwner_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 405,
                  "src": "1634:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1633:27:2"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:2"
            },
            "scope": 481,
            "src": "1611:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "1923:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "1931:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 414,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "1941:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1931:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1949:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1931:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:22:2"
                }
              ]
            },
            "documentation": {
              "id": 406,
              "nodeType": "StructuredDocumentation",
              "src": "1715:140:2",
              "text": "@dev enable a address to access the approve function while the whitelist is active\n@param user the address to approve"
            },
            "functionSelector": "e43252d7",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 410,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "1913:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1913:9:2"
              }
            ],
            "name": "addToWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 420,
                  "src": "1884:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1883:22:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1923:0:2"
            },
            "scope": 481,
            "src": "1860:100:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "2190:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "2198:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "2208:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2198:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2216:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2198:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:23:2"
                }
              ]
            },
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "1965:152:2",
              "text": "@dev disable a address to access the approve function while the whitelist is active\n@param user the address to revoke access from"
            },
            "functionSelector": "8ab1d681",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "2180:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2180:9:2"
              }
            ],
            "name": "removeFromWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 435,
                  "src": "2151:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2150:22:2"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2190:0:2"
            },
            "scope": 481,
            "src": "2122:106:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "2382:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 441,
                      "name": "whitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "2390:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2409:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2390:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:24:2"
                }
              ]
            },
            "documentation": {
              "id": 436,
              "nodeType": "StructuredDocumentation",
              "src": "2234:98:2",
              "text": "@dev end the whitelist. This is a one time call, the whitelist cannot be renabled"
            },
            "functionSelector": "d6b0f484",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 438,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "2372:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2372:9:2"
              }
            ],
            "name": "disableWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:2:2"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2382:0:2"
            },
            "scope": 481,
            "src": "2337:84:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6170
            ],
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "2642:188:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 457,
                    "name": "whitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 316,
                    "src": "2660:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 469,
                  "nodeType": "IfStatement",
                  "src": "2656:102:2",
                  "trueBody": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "2678:80:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 459,
                                  "name": "whitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "2696:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 462,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 460,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5799,
                                    "src": "2706:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                      "typeString": "function () view returns (address payable)"
                                    }
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2706:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2696:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2723:4:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "2696:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "756e617070726f7665642073656e646572",
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2729:19:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d6b3bfe208209cfce2358ead2f54633be39723d5605c5431324e93a0a064a00",
                                "typeString": "literal_string \"unapproved sender\""
                              },
                              "value": "unapproved sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4d6b3bfe208209cfce2358ead2f54633be39723d5605c5431324e93a0a064a00",
                                "typeString": "literal_string \"unapproved sender\""
                              }
                            ],
                            "id": 458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2688:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2688:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "2688:61:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 471,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5799,
                          "src": "2774:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2774:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "2788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 474,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "2797:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 470,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6487,
                      "src": "2765:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2765:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "2765:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2819:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 456,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "2812:11:2"
                }
              ]
            },
            "documentation": {
              "id": 447,
              "nodeType": "StructuredDocumentation",
              "src": "2427:129:2",
              "text": "@dev works like normal erc20 approve except when whitelist is enabled then sender must be whitelisted or revert."
            },
            "functionSelector": "095ea7b3",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2618:8:2"
            },
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 480,
                  "src": "2578:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 480,
                  "src": "2595:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2577:33:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 480,
                  "src": "2636:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2635:6:2"
            },
            "scope": 481,
            "src": "2561:269:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 482,
        "src": "160:2674:2"
      }
    ],
    "src": "0:2835:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/x/Desktop/eth/BIOPv4/contracts/BIOPTokenV4.sol",
      "exportedSymbols": {
        "BIOPTokenV4": [
          481
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".6"
          ]
        },
        "id": 308,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 6008,
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 482,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 309,
        "name": "ImportDirective",
        "src": "25:51:2"
      },
      {
        "attributes": {
          "SourceUnit": 6511,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 482,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 310,
        "name": "ImportDirective",
        "src": "77:55:2"
      },
      {
        "attributes": {
          "SourceUnit": 307,
          "absolutePath": "/Users/x/Desktop/eth/BIOPv4/contracts/BIOPToken.sol",
          "file": "./BIOPToken.sol",
          "scope": 482,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 311,
        "name": "ImportDirective",
        "src": "134:25:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5811,
            6510,
            6588
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            481,
            6510,
            6588,
            5811
          ],
          "name": "BIOPTokenV4",
          "scope": 482
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 6510,
                  "type": "contract ERC20"
                },
                "id": 312,
                "name": "UserDefinedTypeName",
                "src": "184:5:2"
              }
            ],
            "id": 313,
            "name": "InheritanceSpecifier",
            "src": "184:5:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "51fb012d",
              "mutability": "mutable",
              "name": "whitelistEnabled",
              "overrides": null,
              "scope": 481,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 314,
                "name": "ElementaryTypeName",
                "src": "196:4:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "66616c7365",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "bool",
                  "type": "bool",
                  "value": "false"
                },
                "id": 315,
                "name": "Literal",
                "src": "227:5:2"
              }
            ],
            "id": 316,
            "name": "VariableDeclaration",
            "src": "196:36:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9b19251a",
              "mutability": "mutable",
              "name": "whitelist",
              "overrides": null,
              "scope": 481,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 317,
                    "name": "ElementaryTypeName",
                    "src": "246:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 318,
                    "name": "ElementaryTypeName",
                    "src": "255:4:2"
                  }
                ],
                "id": 319,
                "name": "Mapping",
                "src": "238:22:2"
              }
            ],
            "id": 320,
            "name": "VariableDeclaration",
            "src": "238:39:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "overrides": null,
              "scope": 481,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 321,
                "name": "ElementaryTypeName",
                "src": "283:7:2"
              }
            ],
            "id": 322,
            "name": "VariableDeclaration",
            "src": "283:20:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name_",
                      "overrides": null,
                      "scope": 356,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 323,
                        "name": "ElementaryTypeName",
                        "src": "322:6:2"
                      }
                    ],
                    "id": 324,
                    "name": "VariableDeclaration",
                    "src": "322:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "overrides": null,
                      "scope": 356,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 325,
                        "name": "ElementaryTypeName",
                        "src": "343:6:2"
                      }
                    ],
                    "id": 326,
                    "name": "VariableDeclaration",
                    "src": "343:21:2"
                  }
                ],
                "id": 327,
                "name": "ParameterList",
                "src": "321:44:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 332,
                "name": "ParameterList",
                "src": "395:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6510,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 328,
                    "name": "Identifier",
                    "src": "373:5:2"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 324,
                      "type": "string memory",
                      "value": "name_"
                    },
                    "id": 329,
                    "name": "Identifier",
                    "src": "379:5:2"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 326,
                      "type": "string memory",
                      "value": "symbol_"
                    },
                    "id": 330,
                    "name": "Identifier",
                    "src": "386:7:2"
                  }
                ],
                "id": 331,
                "name": "ModifierInvocation",
                "src": "373:21:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1300000300000000000000000000000_by_1",
                                  "typeString": "int_const 1300000300000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6386,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 333,
                            "name": "Identifier",
                            "src": "403:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 334,
                                "name": "Identifier",
                                "src": "409:3:2"
                              }
                            ],
                            "id": 335,
                            "name": "MemberAccess",
                            "src": "409:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31333030303030333030303030303030303030303030303030303030303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1300000300000000000000000000000",
                              "value": "1300000300000000000000000000000"
                            },
                            "id": 336,
                            "name": "Literal",
                            "src": "421:31:2"
                          }
                        ],
                        "id": 337,
                        "name": "FunctionCall",
                        "src": "403:50:2"
                      }
                    ],
                    "id": 338,
                    "name": "ExpressionStatement",
                    "src": "403:50:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 316,
                              "type": "bool",
                              "value": "whitelistEnabled"
                            },
                            "id": 339,
                            "name": "Identifier",
                            "src": "899:16:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 340,
                            "name": "Literal",
                            "src": "918:4:2"
                          }
                        ],
                        "id": 341,
                        "name": "Assignment",
                        "src": "899:23:2"
                      }
                    ],
                    "id": 342,
                    "name": "ExpressionStatement",
                    "src": "899:23:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 320,
                                  "type": "mapping(address => bool)",
                                  "value": "whitelist"
                                },
                                "id": 343,
                                "name": "Identifier",
                                "src": "930:9:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 344,
                                    "name": "Identifier",
                                    "src": "940:3:2"
                                  }
                                ],
                                "id": 345,
                                "name": "MemberAccess",
                                "src": "940:10:2"
                              }
                            ],
                            "id": 346,
                            "name": "IndexAccess",
                            "src": "930:21:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 347,
                            "name": "Literal",
                            "src": "954:4:2"
                          }
                        ],
                        "id": 348,
                        "name": "Assignment",
                        "src": "930:28:2"
                      }
                    ],
                    "id": 349,
                    "name": "ExpressionStatement",
                    "src": "930:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 322,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 350,
                            "name": "Identifier",
                            "src": "966:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 351,
                                "name": "Identifier",
                                "src": "974:3:2"
                              }
                            ],
                            "id": 352,
                            "name": "MemberAccess",
                            "src": "974:10:2"
                          }
                        ],
                        "id": 353,
                        "name": "Assignment",
                        "src": "966:18:2"
                      }
                    ],
                    "id": 354,
                    "name": "ExpressionStatement",
                    "src": "966:18:2"
                  }
                ],
                "id": 355,
                "name": "Block",
                "src": "395:596:2"
              }
            ],
            "id": 356,
            "name": "FunctionDefinition",
            "src": "310:681:2"
          },
          {
            "attributes": {
              "functionSelector": "42966c68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "burn",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev enables DAO to burn tokens \n@param amount the amount of tokens to burn"
                },
                "id": 357,
                "name": "StructuredDocumentation",
                "src": "998:98:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 379,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 358,
                        "name": "ElementaryTypeName",
                        "src": "1115:7:2"
                      }
                    ],
                    "id": 359,
                    "name": "VariableDeclaration",
                    "src": "1115:14:2"
                  }
                ],
                "id": 360,
                "name": "ParameterList",
                "src": "1114:16:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 361,
                "name": "ParameterList",
                "src": "1138:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_41059359df82da7f3c0761b35af2d92f5dfcc348618e6a6acaea0643f23340a3",
                                  "typeString": "literal_string \"insufficent balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 362,
                            "name": "Identifier",
                            "src": "1146:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6110,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "balanceOf"
                                    },
                                    "id": 363,
                                    "name": "Identifier",
                                    "src": "1154:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 364,
                                        "name": "Identifier",
                                        "src": "1164:3:2"
                                      }
                                    ],
                                    "id": 365,
                                    "name": "MemberAccess",
                                    "src": "1164:10:2"
                                  }
                                ],
                                "id": 366,
                                "name": "FunctionCall",
                                "src": "1154:21:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 359,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 367,
                                "name": "Identifier",
                                "src": "1179:6:2"
                              }
                            ],
                            "id": 368,
                            "name": "BinaryOperation",
                            "src": "1154:31:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "696e737566666963656e742062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"insufficent balance\"",
                              "value": "insufficent balance"
                            },
                            "id": 369,
                            "name": "Literal",
                            "src": "1187:21:2"
                          }
                        ],
                        "id": 370,
                        "name": "FunctionCall",
                        "src": "1146:63:2"
                      }
                    ],
                    "id": 371,
                    "name": "ExpressionStatement",
                    "src": "1146:63:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6442,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 372,
                            "name": "Identifier",
                            "src": "1217:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 373,
                                "name": "Identifier",
                                "src": "1223:3:2"
                              }
                            ],
                            "id": 374,
                            "name": "MemberAccess",
                            "src": "1223:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 359,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 375,
                            "name": "Identifier",
                            "src": "1235:6:2"
                          }
                        ],
                        "id": 376,
                        "name": "FunctionCall",
                        "src": "1217:25:2"
                      }
                    ],
                    "id": 377,
                    "name": "ExpressionStatement",
                    "src": "1217:25:2"
                  }
                ],
                "id": 378,
                "name": "Block",
                "src": "1138:111:2"
              }
            ],
            "id": 379,
            "name": "FunctionDefinition",
            "src": "1101:148:2"
          },
          {
            "attributes": {
              "name": "onlyOwner",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Reverts if called by anyone other than the contract owner."
                },
                "id": 380,
                "name": "StructuredDocumentation",
                "src": "1289:78:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 381,
                "name": "ParameterList",
                "src": "1390:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                  "typeString": "literal_string \"Only callable by owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 382,
                            "name": "Identifier",
                            "src": "1401:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 383,
                                    "name": "Identifier",
                                    "src": "1409:3:2"
                                  }
                                ],
                                "id": 384,
                                "name": "MemberAccess",
                                "src": "1409:10:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 322,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 385,
                                "name": "Identifier",
                                "src": "1423:5:2"
                              }
                            ],
                            "id": 386,
                            "name": "BinaryOperation",
                            "src": "1409:19:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Only callable by owner\"",
                              "value": "Only callable by owner"
                            },
                            "id": 387,
                            "name": "Literal",
                            "src": "1430:24:2"
                          }
                        ],
                        "id": 388,
                        "name": "FunctionCall",
                        "src": "1401:54:2"
                      }
                    ],
                    "id": 389,
                    "name": "ExpressionStatement",
                    "src": "1401:54:2"
                  },
                  {
                    "id": 390,
                    "name": "PlaceholderStatement",
                    "src": "1463:1:2"
                  }
                ],
                "id": 391,
                "name": "Block",
                "src": "1393:78:2"
              }
            ],
            "id": 392,
            "name": "ModifierDefinition",
            "src": "1372:99:2"
          },
          {
            "attributes": {
              "functionSelector": "4fb2e45d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "transferOwner",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev transfer ownership\n@param newOwner_ the new address to assume ownership responsiblity (the multisig)"
                },
                "id": 393,
                "name": "StructuredDocumentation",
                "src": "1478:128:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newOwner_",
                      "overrides": null,
                      "scope": 405,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 394,
                        "name": "ElementaryTypeName",
                        "src": "1634:15:2"
                      }
                    ],
                    "id": 395,
                    "name": "VariableDeclaration",
                    "src": "1634:25:2"
                  }
                ],
                "id": 396,
                "name": "ParameterList",
                "src": "1633:27:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 399,
                "name": "ParameterList",
                "src": "1678:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 392,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 397,
                    "name": "Identifier",
                    "src": "1668:9:2"
                  }
                ],
                "id": 398,
                "name": "ModifierInvocation",
                "src": "1668:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 322,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 400,
                            "name": "Identifier",
                            "src": "1686:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 395,
                              "type": "address payable",
                              "value": "newOwner_"
                            },
                            "id": 401,
                            "name": "Identifier",
                            "src": "1694:9:2"
                          }
                        ],
                        "id": 402,
                        "name": "Assignment",
                        "src": "1686:17:2"
                      }
                    ],
                    "id": 403,
                    "name": "ExpressionStatement",
                    "src": "1686:17:2"
                  }
                ],
                "id": 404,
                "name": "Block",
                "src": "1678:32:2"
              }
            ],
            "id": 405,
            "name": "FunctionDefinition",
            "src": "1611:99:2"
          },
          {
            "attributes": {
              "functionSelector": "e43252d7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addToWhitelist",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev enable a address to access the approve function while the whitelist is active\n@param user the address to approve"
                },
                "id": 406,
                "name": "StructuredDocumentation",
                "src": "1715:140:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "overrides": null,
                      "scope": 420,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 407,
                        "name": "ElementaryTypeName",
                        "src": "1884:15:2"
                      }
                    ],
                    "id": 408,
                    "name": "VariableDeclaration",
                    "src": "1884:20:2"
                  }
                ],
                "id": 409,
                "name": "ParameterList",
                "src": "1883:22:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 412,
                "name": "ParameterList",
                "src": "1923:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 392,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 410,
                    "name": "Identifier",
                    "src": "1913:9:2"
                  }
                ],
                "id": 411,
                "name": "ModifierInvocation",
                "src": "1913:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 320,
                                  "type": "mapping(address => bool)",
                                  "value": "whitelist"
                                },
                                "id": 413,
                                "name": "Identifier",
                                "src": "1931:9:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 408,
                                  "type": "address payable",
                                  "value": "user"
                                },
                                "id": 414,
                                "name": "Identifier",
                                "src": "1941:4:2"
                              }
                            ],
                            "id": 415,
                            "name": "IndexAccess",
                            "src": "1931:15:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 416,
                            "name": "Literal",
                            "src": "1949:4:2"
                          }
                        ],
                        "id": 417,
                        "name": "Assignment",
                        "src": "1931:22:2"
                      }
                    ],
                    "id": 418,
                    "name": "ExpressionStatement",
                    "src": "1931:22:2"
                  }
                ],
                "id": 419,
                "name": "Block",
                "src": "1923:37:2"
              }
            ],
            "id": 420,
            "name": "FunctionDefinition",
            "src": "1860:100:2"
          },
          {
            "attributes": {
              "functionSelector": "8ab1d681",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "removeFromWhitelist",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev disable a address to access the approve function while the whitelist is active\n@param user the address to revoke access from"
                },
                "id": 421,
                "name": "StructuredDocumentation",
                "src": "1965:152:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "overrides": null,
                      "scope": 435,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 422,
                        "name": "ElementaryTypeName",
                        "src": "2151:15:2"
                      }
                    ],
                    "id": 423,
                    "name": "VariableDeclaration",
                    "src": "2151:20:2"
                  }
                ],
                "id": 424,
                "name": "ParameterList",
                "src": "2150:22:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 427,
                "name": "ParameterList",
                "src": "2190:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 392,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 425,
                    "name": "Identifier",
                    "src": "2180:9:2"
                  }
                ],
                "id": 426,
                "name": "ModifierInvocation",
                "src": "2180:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 320,
                                  "type": "mapping(address => bool)",
                                  "value": "whitelist"
                                },
                                "id": 428,
                                "name": "Identifier",
                                "src": "2198:9:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 423,
                                  "type": "address payable",
                                  "value": "user"
                                },
                                "id": 429,
                                "name": "Identifier",
                                "src": "2208:4:2"
                              }
                            ],
                            "id": 430,
                            "name": "IndexAccess",
                            "src": "2198:15:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 431,
                            "name": "Literal",
                            "src": "2216:5:2"
                          }
                        ],
                        "id": 432,
                        "name": "Assignment",
                        "src": "2198:23:2"
                      }
                    ],
                    "id": 433,
                    "name": "ExpressionStatement",
                    "src": "2198:23:2"
                  }
                ],
                "id": 434,
                "name": "Block",
                "src": "2190:38:2"
              }
            ],
            "id": 435,
            "name": "FunctionDefinition",
            "src": "2122:106:2"
          },
          {
            "attributes": {
              "functionSelector": "d6b0f484",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "disableWhitelist",
              "overrides": null,
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev end the whitelist. This is a one time call, the whitelist cannot be renabled"
                },
                "id": 436,
                "name": "StructuredDocumentation",
                "src": "2234:98:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 437,
                "name": "ParameterList",
                "src": "2362:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 440,
                "name": "ParameterList",
                "src": "2382:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 392,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 438,
                    "name": "Identifier",
                    "src": "2372:9:2"
                  }
                ],
                "id": 439,
                "name": "ModifierInvocation",
                "src": "2372:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 316,
                              "type": "bool",
                              "value": "whitelistEnabled"
                            },
                            "id": 441,
                            "name": "Identifier",
                            "src": "2390:16:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 442,
                            "name": "Literal",
                            "src": "2409:5:2"
                          }
                        ],
                        "id": 443,
                        "name": "Assignment",
                        "src": "2390:24:2"
                      }
                    ],
                    "id": 444,
                    "name": "ExpressionStatement",
                    "src": "2390:24:2"
                  }
                ],
                "id": 445,
                "name": "Block",
                "src": "2382:39:2"
              }
            ],
            "id": 446,
            "name": "FunctionDefinition",
            "src": "2337:84:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                6170
              ],
              "functionSelector": "095ea7b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approve",
              "scope": 481,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev works like normal erc20 approve except when whitelist is enabled then sender must be whitelisted or revert."
                },
                "id": 447,
                "name": "StructuredDocumentation",
                "src": "2427:129:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 453,
                "name": "OverrideSpecifier",
                "src": "2618:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "spender",
                      "overrides": null,
                      "scope": 480,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 448,
                        "name": "ElementaryTypeName",
                        "src": "2578:7:2"
                      }
                    ],
                    "id": 449,
                    "name": "VariableDeclaration",
                    "src": "2578:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 480,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 450,
                        "name": "ElementaryTypeName",
                        "src": "2595:7:2"
                      }
                    ],
                    "id": 451,
                    "name": "VariableDeclaration",
                    "src": "2595:14:2"
                  }
                ],
                "id": 452,
                "name": "ParameterList",
                "src": "2577:33:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 480,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 454,
                        "name": "ElementaryTypeName",
                        "src": "2636:4:2"
                      }
                    ],
                    "id": 455,
                    "name": "VariableDeclaration",
                    "src": "2636:4:2"
                  }
                ],
                "id": 456,
                "name": "ParameterList",
                "src": "2635:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 316,
                          "type": "bool",
                          "value": "whitelistEnabled"
                        },
                        "id": 457,
                        "name": "Identifier",
                        "src": "2660:16:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_4d6b3bfe208209cfce2358ead2f54633be39723d5605c5431324e93a0a064a00",
                                          "typeString": "literal_string \"unapproved sender\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 458,
                                    "name": "Identifier",
                                    "src": "2688:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 320,
                                              "type": "mapping(address => bool)",
                                              "value": "whitelist"
                                            },
                                            "id": 459,
                                            "name": "Identifier",
                                            "src": "2696:9:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 5799,
                                                  "type": "function () view returns (address payable)",
                                                  "value": "_msgSender"
                                                },
                                                "id": 460,
                                                "name": "Identifier",
                                                "src": "2706:10:2"
                                              }
                                            ],
                                            "id": 461,
                                            "name": "FunctionCall",
                                            "src": "2706:12:2"
                                          }
                                        ],
                                        "id": 462,
                                        "name": "IndexAccess",
                                        "src": "2696:23:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "74727565",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "true"
                                        },
                                        "id": 463,
                                        "name": "Literal",
                                        "src": "2723:4:2"
                                      }
                                    ],
                                    "id": 464,
                                    "name": "BinaryOperation",
                                    "src": "2696:31:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "756e617070726f7665642073656e646572",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"unapproved sender\"",
                                      "value": "unapproved sender"
                                    },
                                    "id": 465,
                                    "name": "Literal",
                                    "src": "2729:19:2"
                                  }
                                ],
                                "id": 466,
                                "name": "FunctionCall",
                                "src": "2688:61:2"
                              }
                            ],
                            "id": 467,
                            "name": "ExpressionStatement",
                            "src": "2688:61:2"
                          }
                        ],
                        "id": 468,
                        "name": "Block",
                        "src": "2678:80:2"
                      }
                    ],
                    "id": 469,
                    "name": "IfStatement",
                    "src": "2656:102:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6487,
                              "type": "function (address,address,uint256)",
                              "value": "_approve"
                            },
                            "id": 470,
                            "name": "Identifier",
                            "src": "2765:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5799,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 471,
                                "name": "Identifier",
                                "src": "2774:10:2"
                              }
                            ],
                            "id": 472,
                            "name": "FunctionCall",
                            "src": "2774:12:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 449,
                              "type": "address",
                              "value": "spender"
                            },
                            "id": 473,
                            "name": "Identifier",
                            "src": "2788:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 451,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 474,
                            "name": "Identifier",
                            "src": "2797:6:2"
                          }
                        ],
                        "id": 475,
                        "name": "FunctionCall",
                        "src": "2765:39:2"
                      }
                    ],
                    "id": 476,
                    "name": "ExpressionStatement",
                    "src": "2765:39:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 456
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 477,
                        "name": "Literal",
                        "src": "2819:4:2"
                      }
                    ],
                    "id": 478,
                    "name": "Return",
                    "src": "2812:11:2"
                  }
                ],
                "id": 479,
                "name": "Block",
                "src": "2642:188:2"
              }
            ],
            "id": 480,
            "name": "FunctionDefinition",
            "src": "2561:269:2"
          }
        ],
        "id": 481,
        "name": "ContractDefinition",
        "src": "160:2674:2"
      }
    ],
    "id": 482,
    "name": "SourceUnit",
    "src": "0:2835:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF1386c6ca20816Ec22d0f1d5fDf474770D943D7D",
      "transactionHash": "0xe7366af9d5f8d82128ad3ff299220e2d2a782549e5b48b149c1f5a58889aa707"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-05T17:26:13.794Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addToWhitelist(address)": {
        "details": "enable a address to access the approve function while the whitelist is active",
        "params": {
          "user": "the address to approve"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "works like normal erc20 approve except when whitelist is enabled then sender must be whitelisted or revert."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "enables DAO to burn tokens ",
        "params": {
          "amount": "the amount of tokens to burn"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disableWhitelist()": {
        "details": "end the whitelist. This is a one time call, the whitelist cannot be renabled"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeFromWhitelist(address)": {
        "details": "disable a address to access the approve function while the whitelist is active",
        "params": {
          "user": "the address to revoke access from"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwner(address)": {
        "details": "transfer ownership",
        "params": {
          "newOwner_": "the new address to assume ownership responsiblity (the multisig)"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}