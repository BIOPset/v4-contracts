pragma solidity ^0.6.6;

import "@openzeppelin/contracts/math/SafeMath.sol";
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";



contract V2V3Swap{

    using SafeMath for uint256;

    address payable public owner;

    address public token;
    address public v3;
    address public v2;
    mapping(address=>uint256) claimants;

    constructor(address token_, address v2_, address v3_) public {
        owner = msg.sender;
        v3 = v3_;
        v2 = v2_;
        token = token_;

        //hardcode all claimants here
        claimants[0X2A8600BBDAAB254A2F8A8E00912799295C3DD601] = 20520000000000000000000;
        claimants[0XA67F3A9A43380E471296B897E5BDA2EC9372984E] = 16367000000000000000000;
        claimants[0XDD0DDAD1CA7B57ACAC3E1ED2CEAC6EBC5526431A] = 14880000000000000000000;
        claimants[0X814FCC59F54C375729084F48A91EAFD232E8F19E] = 11480000000000000000000;
        claimants[0X392365D5954A9B8BCE72CC6B55BC206120145220] = 10448000000000000000000;
        claimants[0X5814EBFA4C49C60FE898A63C907F8E345419308A] = 9848000000000000000000;
        claimants[0XCBBC5D06BE48B9B1D90A8E787B4D42BC4A3B74A8] = 8904000000000000000000;
        claimants[0X9310BCC37E24667A83ACA7A495371A47F7401AD0] = 8640000000000000000000;
        claimants[0X6ED1CDFE242E653980C37AEB498B997FA0B584FD] = 8558000000000000000000;
        claimants[0XC67C6E8F19EEB70D3FFFBA95E5CE9DE2D163ED31] = 6400000000000000000000;
        claimants[0X3DAC271D1B36A434880C527A678B6487AC9C1F8C] = 6000000000000000000000;
        claimants[0X0682EBEC1F898110D1E5741E2C7DAFFFB6A47870] = 4240000000000000000000;
        claimants[0X7329DD949AA536E23E0A8962F5829C8A3C24B805] = 3360000000000000000000;
        claimants[0X261377CFB52E6FD3048B0AB991D991EE43EF2D4A] = 3160000000000000000000;
        claimants[0X20A56DA502F9398DB0B3698D984427CD62A7A560] = 2640000000000000000000;
        claimants[0X9A5A4AEB2C93E6ED27B8C5D2392828182EC01BDA] = 2640000000000000000000;
        claimants[0X8ED67985496FDDFF1721033908A5AF3BCF2D9DE9] = 2600000000000000000000;
        claimants[0XDEC08CB92A506B88411DA9BA290F3694BE223C26] = 2568000000000000000000;
        claimants[0XF994B0748195D347A16E84D261B17A22D8D96135] = 2000000000000000000000;
        claimants[0X590DFBD53781C6D9D8404EB8E1847FEA1AFAD319] = 1920000000000000000000;
        claimants[0X62D107C7555D246A6D2C19CB2A13D256168276EB] = 1920000000000000000000;
        claimants[0X880D930B4AC0B73966DE27C5267E304D2093BDDE] = 1920000000000000000000;
        claimants[0X656FAFABBF1B8C42B4F63AB15F9BEE8027A25978] = 1680000000000000000000;
        claimants[0X9A568BFEB8CB19E4BAFCB57EE69498D57D9591CA] = 1680000000000000000000;
        claimants[0X6E5D43A620FC9456A1F23BE69933A516E177DDEC] = 1440000000000000000000;
        claimants[0X02E4F367FC7CB77D9B6818440648FC4DD5D21891] = 1280000000000000000000;
        claimants[0X6EE25007B73FA79902A152A78CAB50F4F7FA9EFF] = 1200000000000000000000;
        claimants[0XFEEAA6A2AE0D4A15E947AFC71DC249A29DC2778D] = 1200000000000000000000;
        claimants[0XF309921083CDAEB3758BC8C24A4156EDFA64CA2F] = 1000000000000000000000;
        claimants[0XA76B0152FE8BC2EC3CBFAC3D3ECEE4A397747051] = 960000000000000000000;
        claimants[0XBE719B05B4DBF02ED9555EF92D36D746312403AE] = 960000000000000000000;
        claimants[0X59CE5702F124AE45D63AE1C531E41B8C456A072D] = 896000000000000000000;
        claimants[0XF58075DABB3FFA6BE8F577C037CEF8EA60A7B0B8] = 808000000000000000000;
        claimants[0X1AD3E1493A5486F8CB675549CA4D6D124986613B] = 720000000000000000000;
        claimants[0X92B5A3F06FE24CEA07A6F92AA94F2994D481AFC8] = 720000000000000000000;
        claimants[0XE995E2A9AE5210FEB6DD07618AF28EC38B2D7CE1] = 720000000000000000000;
        claimants[0X6EE4741BC0C4928F8D878AC7FE0421E35065AD1B] = 648000000000000000000;
        claimants[0X304D0370B024DBEF25D49055C38CD0AC349C01E6] = 496000000000000000000;
        claimants[0X1250F4A6AA70FE37880D2028B7664EFF3F3A8A76] = 496000000000000000000;
        claimants[0X8950D9117C136B29A9B1AE8CD38DB72226404243] = 490000000000000000000;
        claimants[0X0AC125137553A2938C61E6591098443DB12F6FE8] = 480000000000000000000;
        claimants[0X3AE8A332A51361AB6B9159529A1A007804F6F3B5] = 480000000000000000000;
        claimants[0X61E754D261C39EE4A5FC772EB7D3D086FD70BD0C] = 480000000000000000000;
        claimants[0X75BD4CBE90CAFE7E15B0694C2D03D8345006EE7E] = 480000000000000000000;
        claimants[0XC6234859138EB19E17B3D752AC7744B1169191EF] = 480000000000000000000;
        claimants[0X48B576C87E788A762D6F95A456F2A39113B46950] = 408000000000000000000;
        claimants[0XA50341F5E72ED061CD0ADBD338CBF070DC45784C] = 400000000000000000000;
        claimants[0X9125B2457479964540A0557E3B010681317B635E] = 336000000000000000000;
        claimants[0X9E60AC8A2D7E0339101B8A16335480322BDEE781] = 320000000000000000000;
        claimants[0XE0B795554ED78C7889635C0044A38C1F5F2F7E0A] = 320000000000000000000;
        claimants[0X2319FC093BEAD97D0A5C329F09895031CA1EE955] = 240000000000000000000;
        claimants[0X75CACE0BABA984F721F40443CE4ACB6BB229A9B0] = 240000000000000000000;
        claimants[0X89B35895E55E51A549D068E695C62063744F576B] = 240000000000000000000;
        claimants[0X9528AA2822B730260731EC080D959C8E55135810] = 240000000000000000000;
        claimants[0XB3A8EAB7EFD3E7CDC18567ABF4725B99106A259D] = 240000000000000000000;
        claimants[0XC7083893735F9AA7E9CCC4B41F8A3A0B188E9FDA] = 240000000000000000000;
        claimants[0XCA7F8F6A21C6E0F3B0177207407FC935429BDD27] = 240000000000000000000;
        claimants[0XD80775766186EF44C73422FDF97D92701C27F70E] = 240000000000000000000;
        claimants[0XE7BED7FD83CBD8C548CC59F103B6CEC6FABE53A9] = 240000000000000000000;
        claimants[0XF27696C8BCA7D54D696189085AE1283F59342FA6] = 240000000000000000000;
        claimants[0XFEB620B14A9C3683CECB9097802AF9C32E51C701] = 240000000000000000000;
        claimants[0X3B7318457F091965C488DAC7E58559993E4971DE] = 240000000000000000000;
        claimants[0X5EEFEF8238B759BD8B8498EC3D1001BE34FBF835] = 240000000000000000000;
        claimants[0X88551E0E83B1A8A47FB7B50507298B229CF12586] = 240000000000000000000;
        claimants[0XDBFE857A4CE4673D99CBA3FB7073AAB5421D1E77] = 168000000000000000000;
        claimants[0X6B67623FF56C10D9DCFC2152425F90285FC74DDD] = 160000000000000000000;
        claimants[0XEA1C4D527F34F7372554B24B9FEF950224E4351E] = 160000000000000000000;
        claimants[0X0FD84D7CB911728737556684050782B298F70F0F] = 40000000000000000000;
        claimants[0XF12657E7A1E2320B85B2DD10C5F047EB14F02517] = 32000000000000000000;
        claimants[0XF41D1950282AD07C28E1D469F2CB5586FCD6173B] = 24000000000000000000;
        claimants[0X36CBD78B71A161DFED7C30DB2B5989D81FA31F52] = 8000000000000000000;
        claimants[0X7B0AD03877E2311CD0FEB6D8DCFB4574E2915B8D] = 8000000000000000000;
        claimants[0X97CDD8176084B24AE8A385D4EA9177C31BA0022B] = 8000000000000000000;

    }
    
     modifier onlyOwner() {
      require(msg.sender == owner, "Only callable by owner");
      _;
    }

    function open(uint256 total) public onlyOwner {
        ERC20 v4 = ERC20(token);
        v4.transferFrom(msg.sender, address(this), total);
    }

    function withdraw() public onlyOwner {
        ERC20 v4 = ERC20(token);
        uint256 balance = v4.balanceOf(address(this));
        v4.transfer(msg.sender, balance);
    }

    function transferOwner(address payable newOwner_) public onlyOwner {
        owner = newOwner_;
    }

     /**
     * @dev one time swap of v2 to v4 tokens
     * @param amount the amount of tokens to swap
     */
    function swapv2v4(uint256 amount) external {
        
        require(claimants[msg.sender] >= amount, "not enough whitelisted for u");
        claimants[msg.sender] = claimants[msg.sender].sub(amount);
        ERC20 b2 = ERC20(v2);
        ERC20 v4 = ERC20(token);
        uint256 balance = b2.balanceOf(msg.sender);
        require(balance >= amount, "insufficent biopv2 balance");
        require(v4.balanceOf(address(this)) >= amount);
        require(b2.transferFrom(msg.sender, address(this), amount), "transfer failed");
        v4.transfer(msg.sender, amount);
    }

    /**
     * @dev one time swap of v3 to v4 tokens
     * @param amount the amount of tokens to swap
     */
    function swapv3v4(uint256 amount) external {
        require(claimants[msg.sender] >= amount, "not enough whitelisted for u");
        claimants[msg.sender] = claimants[msg.sender].sub(amount);
        ERC20 b3 = ERC20(v3);
        ERC20 v4 = ERC20(token);
        uint256 balance = b3.balanceOf(msg.sender);
        require(balance >= amount, "insufficent biopv3 balance");
        require(v4.balanceOf(address(this)) >= amount);
        require(b3.transferFrom(msg.sender, address(this), amount), "transfer failed");
        v4.transfer(msg.sender, amount);
    }
}
